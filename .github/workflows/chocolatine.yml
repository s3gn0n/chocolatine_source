env:
  MIRROR_URL: git@github.com:s3gn0n/chocolatine_mirror.git
  EXECUTABLES: my_sokoban
name: Github Actions
on:
  push:
    branches-ignore:
      - 'ga-ignore-'
      
jobs:
  check_coding_style:
    name: checker
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: checkout_repo
        uses: actions/checkout@v3
      - name: check_coding_style
        run: check.sh $(pwd) $(pwd)
      - name: display_coding_style_errors
        run: cat coding-style-reports.log
      - name: annotation_error
        run: |
          if grep -q "error" coding-style-reports.log; then
            echo "::error::$file_content"
              exit 1
          fi

  check_program_compilation:
    name: check if program compile
    needs:
      - check_coding_style
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v3
      - id: check_program_compilation
        run: make
        timeout-minutes: 2
      - run: make clean
      - run: |
          for FILE in $EXECUTABLES; do
              if [ ! -e "$FILE" ]; then
                echo "error : file '$FILE' not exists"
                exit 1
              elif [ ! -x "$FILE" ]; then
                  echo "error : file '$FILE' is not an executable"
                  exit 2
              else
                  echo "$FILE is an executable."
              fi
          done

  run_tests:
    needs:
      - check_program_compilation
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    timeout-minutes: 2
    steps:
      - name: running_test
        uses: actions/checkout@v3
      - name: make_test_runs
        run: make tests_run

  push_to_mirror:
    runs-on: ubuntu-latest
    needs : run_tests
    if : github.event.push
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            $MIRROR_URL
          ssh_private_key:
            $GIT_SSH_PRIVATE_KEY
